* opencv+ob-ipythonのサンプル

#+BEGIN_SRC ipython :session
%matplotlib inline
import numpy as np
import PIL
import cv2
import matplotlib.pyplot as plt
#+END_SRC

#+RESULTS:

まずは適当に画像を読み込んでみる。
#+BEGIN_SRC ipython :session :file /tmp/3mzy3.png :exports both
from PIL import Image # pip install Pillow
import requests
from StringIO import StringIO

response = requests.get("http://www.perso.telecom-paristech.fr/~benhaim/lib/exe/fetch.php?cache=&media=images:lena.png")
img = Image.open(StringIO(response.content))
img
#+END_SRC

#+RESULTS:
[[file:/tmp/3mzy3.png]]


エッジ検出
#+BEGIN_SRC ipython :session :file /tmp/4buzv.png :exports both
# convert PIL image to numpy array
image = np.asarray(img)
edges = cv2.Canny(image, 100, 200)
Image.fromarray(edges)
#+END_SRC

#+RESULTS:
[[file:/tmp/4buzv.png]]

いろんなパラメータを試してみる
#+BEGIN_SRC ipython :session :file /tmp/detky.png :exports both
all_edge = None
width = image.shape[0]
height = image.shape[1]
for i in [10, 20, 40, 80, 160, 320]:
  row_image = cv2.hconcat([cv2.resize(cv2.Canny(image, i, j), (width / 2, height / 2))
                           for j in [10, 20, 40, 80, 160, 320]])
  if all_edge == None:
     all_edge = row_image
  else:
     all_edge = cv2.vconcat([row_image] + [all_edge])
Image.fromarray(all_edge)
#+END_SRC

#+RESULTS:
[[file:/tmp/detky.png]]
