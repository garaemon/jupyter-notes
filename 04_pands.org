* ob-ipython + pandasのサンプル

pandasでデータを作ってみる。

#+BEGIN_SRC ipython :session
import pandas as pd
import numpy as np
dates = pd.date_range("20130101", periods=6)
df = pd.DataFrame(np.random.randn(6, 4), index = dates, columns = list("ABCD"))
df
#+END_SRC

#+RESULTS:
:                    A         B         C         D
: 2013-01-01 -0.011852  1.486085 -1.341349  1.184104
: 2013-01-02 -0.852971  1.372717 -0.101863 -0.009837
: 2013-01-03 -0.220519 -0.731254  0.611974 -1.483596
: 2013-01-04 -0.036891  1.370061  0.944458  1.228745
: 2013-01-05 -1.608308  0.640108 -0.182564  1.531212
: 2013-01-06  0.519869 -0.159660 -0.698008  1.226066

~np.random.randn(6, 4)~ は ~4x6~ のランダムなデータを生成する。
~DataFrame~ の ~index~ キーワードは行の名前、 ~columns~ は列の名前。

次は辞書型のデータを ~DateFrame~ に変換してみる。

#+BEGIN_SRC ipython :session
df2 = pd.DataFrame({'A': 1,
                    'B': pd.Timestamp('20130102'),
                    'C' : pd.Series(1,index=list(range(4)),dtype='float32'),
                    'D' : np.array([3] * 4,dtype='int32'),
                    'E' : pd.Categorical(["test","train","test","train"]),
                    'F' : 'foo'})
df2
#+END_SRC

#+RESULTS:
:    A          B    C  D      E    F
: 0  1 2013-01-02  1.0  3   test  foo
: 1  1 2013-01-02  1.0  3  train  foo
: 2  1 2013-01-02  1.0  3   test  foo
: 3  1 2013-01-02  1.0  3  train  foo

それぞれの型は
#+BEGIN_SRC ipython :session
df2.dtypes
#+END_SRC

#+RESULTS:
: A             int64
: B    datetime64[ns]
: C           float32
: D             int32
: E          category
: F            object
: dtype: object

統計量の表示
#+BEGIN_SRC ipython :session
df2.describe()
#+END_SRC

#+RESULTS:
:          A    C    D
: count  4.0  4.0  4.0
: mean   1.0  1.0  3.0
: std    0.0  0.0  0.0
: min    1.0  1.0  3.0
: 25%    1.0  1.0  3.0
: 50%    1.0  1.0  3.0
: 75%    1.0  1.0  3.0
: max    1.0  1.0  3.0

転置を取る
#+BEGIN_SRC ipython :session
df2.T
#+END_SRC

#+RESULTS:
#+begin_example
                     0                    1                    2  \
A                    1                    1                    1
B  2013-01-02 00:00:00  2013-01-02 00:00:00  2013-01-02 00:00:00
C                    1                    1                    1
D                    3                    3                    3
E                 test                train                 test
F                  foo                  foo                  foo

                     3
A                    1
B  2013-01-02 00:00:00
C                    1
D                    3
E                train
F                  foo
#+end_example

データをsortしてみる
#+BEGIN_SRC ipython :session
df.sort_index(axis=1, ascending=False)
#+END_SRC

#+RESULTS:
:                    D         C         B         A
: 2013-01-01  1.184104 -1.341349  1.486085 -0.011852
: 2013-01-02 -0.009837 -0.101863  1.372717 -0.852971
: 2013-01-03 -1.483596  0.611974 -0.731254 -0.220519
: 2013-01-04  1.228745  0.944458  1.370061 -0.036891
: 2013-01-05  1.531212 -0.182564  0.640108 -1.608308
: 2013-01-06  1.226066 -0.698008 -0.159660  0.519869


#+BEGIN_SRC ipython :session
df.sort(columns='B')
#+END_SRC

#+RESULTS:
:                    A         B         C         D
: 2013-01-03 -0.220519 -0.731254  0.611974 -1.483596
: 2013-01-06  0.519869 -0.159660 -0.698008  1.226066
: 2013-01-05 -1.608308  0.640108 -0.182564  1.531212
: 2013-01-04 -0.036891  1.370061  0.944458  1.228745
: 2013-01-02 -0.852971  1.372717 -0.101863 -0.009837
: 2013-01-01 -0.011852  1.486085 -1.341349  1.184104

データの抜き出し
#+BEGIN_SRC ipython :session
df.loc['20130102':'20130104',['A','B']]
#+END_SRC

#+RESULTS:
:                    A         B
: 2013-01-02 -0.852971  1.372717
: 2013-01-03 -0.220519 -0.731254
: 2013-01-04 -0.036891  1.370061
